#!/usr/bin/env ruby

$LOAD_PATH.unshift File.expand_path('../../lib', __FILE__)

require 'password_generator'
require 'optparse'

options = {}

option_parser = OptionParser.new do |opts|
  executable_name = File.basename($PROGRAM_NAME)
  opts.banner = "Usage: #{executable_name} [options] length"

  options[:file] = '.passgen'
  opts.on('-f', '--file', 'Character set file') do |file|
    options[:file] = file
  end
end

set = nil
# Read config file in home dir
if File.exist?(File.join(ENV['HOME'], '/.passgen'))
  config = File.open(File.join(ENV['HOME'], '/.passgen'))
  set = []
  config.each { |line| set << line.chomp }
end

# Read config from command line, defaults to './.passgen'
if File.exist?(File.expand_path(options[:file]))
  config = File.open(File.expand_path(options[:file]))
  set = []
  config.each { |line| set << line.chomp }
end

begin
  option_parser.parse!
rescue OptionParser::InvalidOption => error
  puts "Passgen doesn't recognize that #{error}"
  exit
rescue OptionParser::AmbiguousOption => error
  puts "That's an #{error}"
  exit
end

if ARGV.empty?
  puts 'Error: you must specify a password length'
  puts option_parser.help
else
  length = ARGV.pop.to_i
  if length > 0
    passwords = PasswordGenerator::PassGen.new(set)
    print passwords.generate(length)
  else
    puts 'You did not enter a valid length'
  end
end
